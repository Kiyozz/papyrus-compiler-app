name: Generate release

on:
  push:
    tags:
      - v*

jobs:
  release:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1.4.4
        with:
          node-version: 16

      - name: Dependencies
        uses: pnpm/action-setup@v2.0.0
        with:
          version: 6
          run_install: true

      - name: Generate SE
        env:
          NODE_ENV: production
          ELECTRON_WEBPACK_APP_MOD_URL: https://www.nexusmods.com/skyrimspecialedition/mods/23852
          ELECTRON_TELEMETRY_API_KEY: ${{ secrets.ELECTRON_TELEMETRY_API_KEY_SE }}
          ELECTRON_TELEMETRY_API: ${{ secrets.ELECTRON_TELEMETRY_API }}
          ELECTRON_TELEMETRY_FEATURE: true
        run: |
          pnpm build
          pnpm package -- --config.productName="PCA SE" --config.extraMetadata.name="PCA SE"

      - name: Generate LE
        env:
          NODE_ENV: production
          ELECTRON_WEBPACK_APP_MOD_URL: https://www.nexusmods.com/skyrim/mods/96339
          ELECTRON_TELEMETRY_API_KEY: ${{ secrets.ELECTRON_TELEMETRY_API_KEY_LE }}
          ELECTRON_TELEMETRY_API: ${{ secrets.ELECTRON_TELEMETRY_API }}
          ELECTRON_TELEMETRY_FEATURE: true
        run: |
          pnpm build -- --no-clean
          pnpm package -- --config.productName="PCA LE" --config.extraMetadata.name="PCA LE"

      - name: Extract changelog
        id: extract_changelog
        run: |
          echo "::set-output name=content::$(node scripts/extract-changelog.mjs ${{ github.ref }})"
        shell: bash

      - uses: actions/create-release@v1
        id: create_release
        if: success()
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: PCA ${{ github.ref }}
          draft: true
          body: ${{ steps.extract_changelog.outputs.content }}
          prerelease: false

      - uses: actions/upload-release-asset@v1
        if: success()
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: './dist/PCA LE.7z'
          asset_name: PCA LE.7z
          asset_content_type: application/x-7z-compressed

      - uses: actions/upload-release-asset@v1
        if: success()
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: './dist/PCA SE.7z'
          asset_name: PCA SE.7z
          asset_content_type: application/x-7z-compressed
